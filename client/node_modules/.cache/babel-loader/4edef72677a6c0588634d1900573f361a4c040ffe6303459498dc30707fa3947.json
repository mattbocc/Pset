{"ast":null,"code":"var _jsxFileName = \"C:\\\\GithubProjects\\\\testweb\\\\client\\\\src\\\\components\\\\ListSetTwo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListSetTwo = () => {\n  _s();\n  const [psets, setPsets] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  //helper function for sort method to compare names within object\n  const compareName = (a, b) => {\n    if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;else if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n    return 0;\n  };\n\n  //helper function for sort method to compare dates within object\n  const compareDate = (a, b) => {\n    if (a.info.date.created < b.info.date.created) return 1;else if (a.info.date.created > b.info.date.created) return -1;\n    return 0;\n  };\n\n  //filter list chronologically\n  const filterChrono = () => {\n    let psetsCopy = [...psets];\n    psetsCopy.sort(compareDate);\n    setPsets(psetsCopy);\n  };\n\n  //filter list Alphabetically\n  const filterAlpha = () => {\n    let psetsCopy = [...psets];\n    psetsCopy.sort(compareName);\n    setPsets(psetsCopy);\n  };\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3006/api/pset-database\");\n        setPsets(response.data);\n        console.log(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mx-5\",\n        onClick: filterAlpha,\n        children: \"Filter Alphabetically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: filterChrono,\n        children: \"Filter Chronologically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Doi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: psets && psets.filter(pset => {\n          if (filter.toLowerCase() === \"\") return pset;else return pset.name.toLowerCase().includes(filter);\n        }).map((pset, index) => {\n          let doiLink = `https://doi.org/${pset.repositories[0].doi}`;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: pset.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: pset.info.date.created.slice(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: doiLink,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: doiLink\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, pset.repositories[0].doi, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ListSetTwo, \"TQzz/uy5cM2BrDiROJU/25/WlWE=\");\n_c = ListSetTwo;\nexport default ListSetTwo;\nvar _c;\n$RefreshReg$(_c, \"ListSetTwo\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ListSetTwo","_s","psets","setPsets","filter","setFilter","compareName","a","b","name","toLowerCase","compareDate","info","date","created","filterChrono","psetsCopy","sort","filterAlpha","fetch","response","get","data","console","log","error","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","scope","pset","includes","map","index","doiLink","repositories","doi","slice","href","target","rel","_c","$RefreshReg$"],"sources":["C:/GithubProjects/testweb/client/src/components/ListSetTwo.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ListSetTwo = () => {\r\n  const [psets, setPsets] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  //helper function for sort method to compare names within object\r\n  const compareName = (a, b) => {\r\n    if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n    else if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\r\n    return 0;\r\n  };\r\n\r\n  //helper function for sort method to compare dates within object\r\n  const compareDate = (a, b) => {\r\n    if (a.info.date.created < b.info.date.created) return 1;\r\n    else if (a.info.date.created > b.info.date.created) return -1;\r\n    return 0;\r\n  };\r\n\r\n  //filter list chronologically\r\n  const filterChrono = () => {\r\n    let psetsCopy = [...psets];\r\n    psetsCopy.sort(compareDate);\r\n    setPsets(psetsCopy);\r\n  };\r\n\r\n  //filter list Alphabetically\r\n  const filterAlpha = () => {\r\n    let psetsCopy = [...psets];\r\n    psetsCopy.sort(compareName);\r\n    setPsets(psetsCopy);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:3006/api/pset-database\"\r\n        );\r\n        setPsets(response.data);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetch();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"text-center my-5\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-5\"\r\n          onClick={filterAlpha}\r\n        >\r\n          Filter Alphabetically\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={filterChrono}\r\n        >\r\n          Filter Chronologically\r\n        </button>\r\n      </div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Date Created</th>\r\n            <th scope=\"col\">Doi</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {psets &&\r\n            psets.filter((pset) => {\r\n              if (filter.toLowerCase() === \"\") return pset\r\n              else return pset.name.toLowerCase().includes(filter)\r\n            }).map((pset, index) => {\r\n              let doiLink = `https://doi.org/${pset.repositories[0].doi}`;\r\n              return (\r\n                <tr key={pset.repositories[0].doi}>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{pset.name}</td>\r\n                  <td>{pset.info.date.created.slice(0, 10)}</td>\r\n                  <td>\r\n                    <a href={doiLink} target=\"_blank\" rel=\"noreferrer\">{doiLink}</a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListSetTwo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}